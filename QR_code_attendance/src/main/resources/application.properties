#spring.application.name=USER_SERVICE
#server.port=8082
#
## Spring Data Config
#spring.datasource.url=jdbc:postgresql://localhost:5432/attendance
#spring.datasource.username=juhirajani
#spring.datasource.password=juhi123
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.generate-ddl=true
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#
## Eureka Client Config
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#
## Logging Config
#logging.level.com.netflix.discovery=DEBUG
#logging.level.org.springframework.cloud.netflix.eureka=DEBUG
#
#spring.servlet.multipart.enabled=true
#spring.servlet.multipart.max-file-size=10MB
#spring.servlet.multipart.max-request-size=10MB


#spring.application.name=QR_CODE_ATTENDANCE
#server.port=8082
#
## Spring Data Config
#spring.datasource.url=jdbc:postgresql://postgres:5432/attendance
#spring.datasource.username=juhirajani
#spring.datasource.password=juhi123
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.generate-ddl=true
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#
## Eureka Client Config
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#
## Logging Config
#logging.level.com.netflix.discovery=DEBUG
#logging.level.org.springframework.cloud.netflix.eureka=DEBUG
#
#spring.servlet.multipart.enabled=true
#spring.servlet.multipart.max-file-size=10MB
#spring.servlet.multipart.max-request-size=10MB


# Spring Application Name and Server Port
#spring.application.name=QR-CODE-ATTENDANCE
#server.port=8082
#
## Spring Data Config (PostgreSQL)
#spring.datasource.url=jdbc:postgresql://postgres:5432/attendance
#spring.datasource.username=juhirajani
#spring.datasource.password=juhi123
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.generate-ddl=true
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#
## Eureka Client Config
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.service-url.defaultZone=http://server-registry:8761/eureka
#
## Logging Config
#logging.level.com.netflix.discovery=DEBUG
#logging.level.org.springframework.cloud.netflix.eureka=DEBUG
#
## File Upload Configuration
#spring.servlet.multipart.enabled=true
#spring.servlet.multipart.max-file-size=10MB
#spring.servlet.multipart.max-request-size=10MB
#
##management.metrics.enable.all=false
#
#management.metrics.binders.jvm=false
#
#
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration,org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration
#
## Health check endpoint (optional customization)
##management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.include=health,info
#management.endpoint.health.show-details=always


#spring.application.name=QR-CODE-ATTENDANCE
#server.port=8082
## Spring Data Config (PostgreSQL)
#spring.datasource.url=jdbc:postgresql://postgres:5432/attendance
#spring.datasource.username=juhirajani
#spring.datasource.password=juhi123
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.generate-ddl=true
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
## Eureka Client Config
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.service-url.defaultZone=http://server-registry:8761/eureka
## Logging Config
#logging.level.com.netflix.discovery=DEBUG
#logging.level.org.springframework.cloud.netflix.eureka=DEBUG
#
#logging.level.root=INFO
#logging.level.org.springframework.web=DEBUG
#logging.level.com.juhi.spe_major=DEBUG
#
## Send logs to Logstash via TCP
##logging.logback.appender.logstash.host=logstash
##logging.logback.appender.logstash.port=5050
## File Upload Configuration
#spring.servlet.multipart.enabled=true
#spring.servlet.multipart.max-file-size=10MB
#spring.servlet.multipart.max-request-size=10MB
#
#management.metrics.enable.system.cpu=false
#
#management.server.port=8082
#
## Enable CORS globally
#spring.webflux.cors.allow-credentials=true
#spring.webflux.cors.allowed-origins=http://localhost:3000 # Frontend URL
#spring.webflux.cors.allowed-methods=GET,POST,PUT,DELETE,PATCH
#
#management.endpoints.web.exposure.include=health
#management.endpoint.health.show-details=always
#management.endpoint.health.probe.enabled=true


# Application Info
spring.application.name=QR-CODE-ATTENDANCE
server.port=8082

# Spring Data Config (PostgreSQL)
spring.datasource.url=jdbc:postgresql://postgres-service:5432/attendance
spring.datasource.username=juhirajani
spring.datasource.password=juhi123
spring.datasource.driver-class-name=org.postgresql.Driver
management.metrics.binders.system.enabled=false

# JPA / Hibernate Config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Eureka Client Config
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://server-registry:8761/eureka

# Logging Config
logging.level.com.netflix.discovery=DEBUG
logging.level.org.springframework.cloud.netflix.eureka=DEBUG
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.com.juhi.spe_major=DEBUG

# Logstash (commented out)
# logging.logback.appender.logstash.host=logstash
# logging.logback.appender.logstash.port=5050

# File Upload Config
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Actuator / Management / Disable system metrics to avoid CGroup error
management.metrics.enable.system=false
management.metrics.enable.system.cpu=false
management.metrics.enable.jvm=false

management.server.port=8082
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
management.endpoint.health.probe.enabled=true

# Enable CORS globally (for Spring WebFlux or if using reactive stack)
spring.webflux.cors.allow-credentials=true
spring.webflux.cors.allowed-origins=http://localhost:3000
spring.webflux.cors.allowed-methods=GET,POST,PUT,DELETE,PATCH

file.upload-dir=/app/images
# Disable cgroup metrics
management.metrics.enable.process.cpu=false

#spring.security.enabled=false

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration,org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration,org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration,org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration, org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration,org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration


#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration











